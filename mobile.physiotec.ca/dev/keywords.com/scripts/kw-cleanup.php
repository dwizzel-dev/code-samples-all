<?php
/**
@auth:	Dwizzel
@date:	00-00-0000
@info:	script de cleanup de des table de la DB qui sont en rapport avec les keywords soit 
		les tables 'keyword', 'keyword_rank' et 'keyword_exercise'
@inst:


	Je vais utiliser les classes deja presente dans "mobile....@physiotec.ca/dev"

	1) 	
	On va aller chercher tout les keywords de la table 'keyword' qui ont un 'autogenerated' a 1, ce sont ceux qui sont genere avec les recherches

	2) 	
	On va cleaner la table 'keyword_rank' de tout les keywords qui ont ete enleve 
	de la table 'keyword' peu importe la langue

	3) 
	On va cleaner la table 'keyword_exercise' de tout les keywords qui ont ete enleve 
	de la table 'keyword' 

	4) on va aussi modifier qui ont une locale a 'xxxxx' ou 'en' ou autres pas dans le standard
	
*/
//-----------------------------------------------------------------------------------------------

header('Content-Type: text/plain; charset=utf-8', true);

//EXIT('COMMENT LINE '.__LINE__.' TO RUN'."\n"); //remove to insert data

// ERROR REPORTING
error_reporting(E_ALL);
// BASE DEFINE
require_once('/var/www/mobile....@physiotec.ca/dev/keywords.com/scripts/kw-define.php');
//check if it was defined
if(!defined('DIR_CLASS')){
	define('DIR_CLASS', DIR_BASE_CLASS.'SCRIPT/');
	}
if(!defined('DIR_INC')){
	define('DIR_INC', DIR_BASE_INC.'SCRIPT/');
	}
if(!defined('DIR_LOGS')){
	define('DIR_LOGS', DIR_BASE_LOGS.'SCRIPT/');
	}
//helpers function for all sites
require_once(DIR_INC.'helpers.php');
//functions for this specific sites
require_once(DIR_INC.'functions.php');
//change the error handling if it is defined in the function.php or helpers.php file
if(function_exists('phpErrorHandler')){
	set_error_handler('phpErrorHandler');
	}
//required 
require_once(DIR_CLASS.'globals.php');
require_once(DIR_CLASS.'utility.php');	
require_once(DIR_CLASS.'registry.php');
require_once(DIR_CLASS.'log.php');
require_once(DIR_CLASS.'database.php');
require_once(DIR_CLASS.'errors.php');
//register new class too the registry to simplify arguments passing to other classes
$oReg = new Registry();
$oReg->set('glob', new Globals());	
$oReg->set('utils', new Utility($oReg));		
$oReg->set('log', new Log($oReg));
$oReg->set('err', new Errors($oReg));
//minor check on main db connection
$oReg->set('db', new Database(DB_TYPE, DB_HOSTNAME, DB_USERNAME, DB_PASSWORD, DB_DATABASE, $oReg));
if(!$oReg->get('db')->getStatus()){
	exit('ERR: NO DATABASE CONNECTION[db]');
	}

//local enabled
$gArrLocaleEnabled = array(
	'en_US',
	'fr_CA',
	'de_DE',
	'es_MX',
	'fr_FR',
	'nl_NL',
	'pt_PT',
	);

//-----------------------------------------------------------------------------------------------

function deleteKeywordIds(&$oReg, $bExecute, $strIds){
	//on build le sql delete de la table 'keyword_rank'
	$query = 'DELETE FROM keyword_rank WHERE idKeyword IN ('.$strIds.');';
	if($bExecute){
		$oReg->get('db')->query($query);
		}
	//safe show
	echo 'QUERY:'.EOL.$query.EOL.EOL;	
	//on build le sql delete de la table 'keyword_rank'
	$query = 'DELETE FROM keyword_exercise WHERE idKeyword IN ('.$strIds.');';
	if($bExecute){
		$oReg->get('db')->query($query);
		}
	//safe show
	echo 'QUERY:'.EOL.$query.EOL.EOL;
	}



//-----------------------------------------------------------------------------------------------

//ceux qui sont a autogenerated

//execution or test
$bExecute = true;
//holder des keyword id a supprimer
$strKeywordIds = '';
//passe 1 get des keywords
$query = 'SELECT idKeyword AS "id" FROM keyword WHERE autogenerated = "1";';
//safe show
echo 'QUERY:'.EOL.$query.EOL.EOL;
//resultset
$rs = $oReg->get('db')->query($query);
//if some result
if($rs && $rs->num_rows){
	//loop	
	foreach($rs->rows AS $k=>$v){
		$strKeywordIds .= intVal($v['id']).',';
		}
	//minor check
	if($strKeywordIds != ''){
		//la string the kw to delete
		$strKeywordIds = substr($strKeywordIds, 0, strlen($strKeywordIds) - 1);
		//on build le sql delete de la table 'keyword'
		$query = 'DELETE FROM keyword WHERE idKeyword IN ('.$strKeywordIds.');';
		if($bExecute){
			$oReg->get('db')->query($query);
			}
		deleteKeywordIds($oReg, $bExecute, $strKeywordIds);
		}
	}
//cleanup
unset($rs, $k, $v, $strKeywordIds, $query);	


//-----------------------------------------------------------------------------------------------

//maintenant on va chercher les locales qui sont mauvaise ou mal forme

//holder des keyword id a supprimer
$strKeywordIds = '';
//passe 1 get des keywords
$query = 'SELECT idKeyword AS "id", locale AS "locale" FROM keyword;';
//safe show
echo 'QUERY:'.EOL.$query.EOL.EOL;
//resultset
$rs = $oReg->get('db')->query($query);
//if some result
if($rs && $rs->num_rows){
	//loop	
	foreach($rs->rows AS $k=>$v){
		//check si la langue existe sinon on supprime
		if(!in_array($v['locale'], $gArrLocaleEnabled)){	
			$strKeywordIds .= intVal($v['id']).',';
			}
		}
	//minor check
	if($strKeywordIds != ''){
		//la string the kw to delete
		$strKeywordIds = substr($strKeywordIds, 0, strlen($strKeywordIds) - 1);
		//on build le sql delete de la table 'keyword'
		$query = 'DELETE FROM keyword WHERE idKeyword IN ('.$strKeywordIds.');';
		if($bExecute){
			$oReg->get('db')->query($query);
			}
		deleteKeywordIds($oReg, $bExecute, $strKeywordIds);
		}		
	}
//cleanup
unset($rs, $k, $v, $query, $strKeywordIds);


//-----------------------------------------------------------------------------------------------

//maintenant on va chercher les locales qui sont mauvaise ou mal forme

//holder des keyword id a supprimer
$strKeywordIds = '';
//passe 1 get des keywords
$query = 'SELECT idKeyword AS "id", locale AS "locale" FROM keyword_rank;';
//safe show
echo 'QUERY:'.EOL.$query.EOL.EOL;
//resultset
$rs = $oReg->get('db')->query($query);
//if some result
if($rs && $rs->num_rows){
	//loop	
	foreach($rs->rows AS $k=>$v){
		//check si la langue existe sinon on supprime
		if(!in_array($v['locale'], $gArrLocaleEnabled)){	
			$strKeywordIds .= intVal($v['id']).',';
			}
		}
	//minor check
	if($strKeywordIds != ''){
		//la string the kw to delete
		$strKeywordIds = substr($strKeywordIds, 0, strlen($strKeywordIds) - 1);
		//on build le sql delete de la table 'keyword'
		$query = 'DELETE FROM keyword_rank WHERE idKeyword IN ('.$strKeywordIds.');';
		if($bExecute){
			$oReg->get('db')->query($query);
			}
		}		
	}
//cleanup
unset($rs, $k, $v, $query, $strKeywordIds);


//-----------------------------------------------------------------------------------------------

//maintenant on va chercher les keywords qui reste

//holder des keyword id a supprimer
$strKeywordIds = '';
//passe 1 get des keywords
$query = 'SELECT DISTINCT(idKeyword) AS "id" FROM keyword;';
//safe show
echo 'QUERY:'.EOL.$query.EOL.EOL;
//resultset
$rs = $oReg->get('db')->query($query);
//if some result
if($rs && $rs->num_rows){
	//loop	
	foreach($rs->rows AS $k=>$v){
		$strKeywordIds .= intVal($v['id']).',';
		}
	//minor check
	if($strKeywordIds != ''){
		//la string the kw valid
		$strKeywordIds = substr($strKeywordIds, 0, strlen($strKeywordIds) - 1);
		}
	}
//clean	
unset($rs, $k, $v, $query);	
	
//minor check
if($strKeywordIds != ''){
	
	//maintenant on supprime des keyword_exercice qui pointe sur rien dans la table keyword

	//select des exercises de la table keyword_exercise
	$query = 'SELECT DISTINCT(idKeyword) AS "id" FROM keyword_exercise WHERE idKeyword NOT IN('.$strKeywordIds.');';
	//resultset
	$rs = $oReg->get('db')->query($query);
	//if some result
	if($rs && $rs->num_rows){
		//
		$strIdToDelete = '';
		//loop	
		foreach($rs->rows AS $k=>$v){
			//check si est dans le array si pas alors on supprime
			$strIdToDelete .= intVal($v['id']).',';
			}
		if($strIdToDelete != ''){
			$strIdToDelete = substr($strIdToDelete, 0, strlen($strIdToDelete) - 1);
			//alors on supprime
			deleteKeywordIds($oReg, $bExecute, $strIdToDelete);
			}
		}
	//clean
	unset($rs, $k, $v, $query, $strIdToDelete);
		
	//maintenant on supprime des keyword_rank qui pointe sur rien dans la table keyword

	//select des exercises de la table keyword_exercise
	$query = 'SELECT DISTINCT(idKeyword) AS "id" FROM keyword_rank WHERE idKeyword NOT IN('.$strKeywordIds.');';
	//resultset
	$rs = $oReg->get('db')->query($query);
	//if some result
	if($rs && $rs->num_rows){
		//
		$strIdToDelete = '';
		//loop	
		foreach($rs->rows AS $k=>$v){
			//check si est dans le array si pas alors on supprime
			$strIdToDelete .= intVal($v['id']).',';
			}
		if($strIdToDelete != ''){
			$strIdToDelete = substr($strIdToDelete, 0, strlen($strIdToDelete) - 1);
			//alors on supprime
			deleteKeywordIds($oReg, $bExecute, $strIdToDelete);
			}
		}
	//clean
	unset($rs, $k, $v, $query, $strIdToDelete);

	}



//END



